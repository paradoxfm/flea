plugins {
	id 'com.gorylenko.gradle-git-properties' version '1.4.16'
	//id 'com.github.robfletcher.compass" version' '2.0.6'
	id 'com.eriwen.gradle.js' version '2.12.0'
	id 'com.eriwen.gradle.css' version '2.12.0'
}

group 'ru.megazlo'
version 'b2'

//apply plugin: "com.github.robfletcher.compass"
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'js'
apply plugin: 'css'
apply plugin: 'java'
apply plugin: 'war'

allprojects {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	compile group: 'org.springframework', name: 'spring-webmvc', version: verSpring
	compile group: 'org.springframework', name: 'spring-context-support', version: verSpring
	compile group: 'org.springframework', name: 'spring-orm', version: verSpring
	compile group: 'org.springframework', name: 'spring-aspects', version: verSpring

	compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: verThymeleaf
	compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: verThymeleaf

	providedCompile group: 'javax.mail', name: 'javax.mail-api', version: '1.5.5'

	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: verJackson
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: verJackson

	compile group: 'org.springframework.data', name: 'spring-data-jpa', version: verDataJpa

	compile group: 'org.springframework.security', name: 'spring-security-web', version: verSecurity
	compile group: 'org.springframework.security', name: 'spring-security-config', version: verSecurity

	compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: verHibernate
	compile group: 'org.hibernate', name: 'hibernate-java8', version: verHibernate
	compile group: 'org.hibernate', name: 'hibernate-c3p0', version: verHibernate
	compile group: 'org.hibernate', name: 'hibernate-validator', version: verHibernateValid
	//compile group: 'org.hibernate', name: 'hibernate-search-orm', version: '5.5.3.Final'
	compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'
	//compile group: 'org.ehcache', name: 'ehcache', version: '3.0.1'
	compile group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.2'

	//compile group: 'com.github.scribejava', name: 'scribejava-apis', version: verScribejava
	//compile group: 'com.github.scribejava', name: 'scribejava-core', version: verScribejava

	compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.2'

	compile group: 'javax.servlet', name: 'jstl', version: '1.2'
	providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: verServlet

	providedCompile group: 'org.projectlombok', name: 'lombok', version: verLombok

	compile group: 'org.slf4j', name: 'slf4j-api', version: verSlf4j
	compile group: 'ch.qos.logback', name: 'logback-classic', version: verLogback

	compile group: 'org.postgresql', name: 'postgresql', version: verPostgre

	// всякий шлак для тестирования
	testCompile(group: 'junit', name: 'junit', version: verJunit) {
		exclude group: 'org.hamcrest', module: 'hamcrest-core'
	}
	testCompile group: 'org.springframework', name: 'spring-test', version: verSpring

	testCompile group: 'org.mockito', name: 'mockito-core', version: verMockito
	testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
	testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.1.0'
	testCompile group: 'com.jayway.jsonpath', name: 'json-path-assert', version: '2.1.0'
	testCompile group: 'javax.el', name: 'javax.el-api', version: '2.2.4'
	testCompile group: 'org.glassfish.web', name: 'javax.el', version: '2.2.4'

	testCompile group: 'com.h2database', name: 'h2', version: verH2
}

gitProperties {
	dateFormat = "dd.MM.yyyy HH:mm"
	gitPropertiesDir = file("${project.rootDir}/src/main/resources/")
}

compileJava.options.encoding = "UTF-8"
war.archiveName = 'flea.war'

//сжатие ресурсов в war файл
def jsDir = "${webAppDir}/static/js"
def csDir = "${webAppDir}/static/css"

war.doFirst {
	exclude("**/static/js/**.js")
	exclude("**/static/css/**.css")
	exclude("**/static/css/**.css")
	tasks.jsCombineProd.execute()
	tasks.jsMinifyProd.execute()
	tasks.cssCombineProd.execute()
	tasks.cssMinifyProd.execute()
}

war.webInf {
	into('/static/js/') {
		from(["${buildDir}/static/js/static.min.js", "${buildDir}/static/js/static.js"])
	}
	into('/static/css/') {
		from(["${buildDir}/static/css/static.min.css"])
	}
}

task jsCombineProd(type: com.eriwen.gradle.js.tasks.CombineJsTask) {
	source = ["${jsDir}/jquery.js", "${jsDir}/bootstrap.js", "${jsDir}/bootstrap-select.js", "${jsDir}/angular.js",
			  "${jsDir}/angular-animate.js", "${jsDir}/angular-ui-router.js", "${jsDir}/loading-bar.js"]
	dest = file("${buildDir}/static/js/static.js")
}

task jsMinifyProd(type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
	source = file("${buildDir}/static/js/static.js")
	dest = file("${buildDir}/static/js/static.min.js")
	closure { warningLevel = 'QUIET' }
}

task cssCombineProd(type: com.eriwen.gradle.css.tasks.CombineCssTask) {
	source = ["${csDir}/bootstrap.css", "${csDir}/bootstrap-select.css", "${csDir}/bootstrap-theme-flea.css", "${csDir}/font-awesome.css",
			  "${csDir}/html5imageupload.css", "${csDir}/loading-bar.css", "${csDir}/parallax.css", "${csDir}/site.css"]
	dest = file("${buildDir}/static/css/static.css")
}

task cssMinifyProd(type: com.eriwen.gradle.css.tasks.MinifyCssTask) {
	source = file("${buildDir}/static/css/static.css")
	dest = file("${buildDir}/static/css/static.min.css")
	yuicompressor { /*Optional*/ lineBreakPos = -1 }
}

