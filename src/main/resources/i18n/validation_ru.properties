ru.megazlo.flea.model.ext.FieldMatch.message=\u041F\u0430\u0440\u043E\u043B\u0438 \u0434\u043E\u043B\u0436\u043D\u044B \u0441\u043E\u0432\u043F\u0430\u0434\u0430\u0442\u044C
javax.validation.constraints.AssertFalse.message=1must be false
javax.validation.constraints.AssertTrue.message=1must be true
javax.validation.constraints.DecimalMax.message=1must be less than or equal to {value}
javax.validation.constraints.DecimalMin.message=1must be greater than or equal to {value}
javax.validation.constraints.Digits.message=1numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message=1must be in the future
javax.validation.constraints.Max.message=1must be less than or equal to {value}
javax.validation.constraints.Min.message=1must be greater than or equal to {value}
javax.validation.constraints.NotNull.message=1may not be null
javax.validation.constraints.Null.message=1must be null
javax.validation.constraints.Past.message=1must be in the past
javax.validation.constraints.Pattern.message=1must match \u201C{regexp}\u201D
javax.validation.constraints.Size.message=1size must be between {min} and {max}
org.hibernate.validator.constraints.CreditCardNumber.message=1invalid credit card number
org.hibernate.validator.constraints.Email.message=1not a well-formed email address
org.hibernate.validator.constraints.Length.message=1length must be between {min} and {max}
org.hibernate.validator.constraints.NotBlank.message=1may not be empty
org.hibernate.validator.constraints.NotEmpty.message=1may not be empty
org.hibernate.validator.constraints.Range.message=1must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message=1may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message=1script expression \u201C{script}\u201D didn\u2019t evaluate to true
org.hibernate.validator.constraints.URL.message=1must be a valid URL
NotNull.card.cardType=qwe
